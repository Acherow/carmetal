[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://d2cgt83o6qjed"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_75qnw"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jrr2e"]
parameter_name = "Proximity_Fade"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nkdxp"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeProximityFade" id="VisualShaderNodeProximityFade_guhh2"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_e5mb8"]
parameter_name = "Disolver_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8fyby"]
expanded_output_ports = [0]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_pxe2v"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_0a7ln"]
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_xvod8"]
parameter_name = "Texture_Scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_frex3"]
parameter_name = "Texture_offset"
default_value_enabled = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec2 Texture_Scale = vec2(1.000000, 1.000000);
uniform vec2 Texture_offset = vec2(0.000000, 0.000000);
uniform sampler2D Disolver_Texture : source_color;
uniform float Proximity_Fade = 1;
uniform sampler2D depth_tex_frg_3 : hint_depth_texture;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// Vector2Parameter:8
	vec2 n_out8p0 = Texture_Scale;


// Vector2Parameter:9
	vec2 n_out9p0 = Texture_offset;


// UVFunc:7
	vec2 n_out7p0 = (UV - n_out9p0) * n_out8p0 + n_out9p0;


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(Disolver_Texture, n_out7p0);
	float n_out5p1 = n_out5p0.r;


// SmoothStep:6
	float n_in6p1 = 1.00000;
	float n_out6p0 = smoothstep(n_out2p4, n_in6p1, n_out5p1);


// FloatParameter:11
	float n_out11p0 = Proximity_Fade;


	float n_out3p0;
// ProximityFade:3
	{
		float __depth_tex = texture(depth_tex_frg_3, SCREEN_UV).r;
		vec4 __depth_world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __depth_tex, 1.0);
		__depth_world_pos.xyz /= __depth_world_pos.w;
		n_out3p0 = clamp(1.0 - smoothstep(__depth_world_pos.z + n_out11p0, __depth_world_pos.z, VERTEX.z), 0.0, 1.0);
	}


// FloatOp:10
	float n_out10p0 = n_out6p0 * n_out3p0;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out10p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(620, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_nkdxp")
nodes/fragment/2/position = Vector2(-660, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeProximityFade_guhh2")
nodes/fragment/3/position = Vector2(60, 700)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_e5mb8")
nodes/fragment/4/position = Vector2(-800, 580)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_8fyby")
nodes/fragment/5/position = Vector2(-340, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeSmoothStep_pxe2v")
nodes/fragment/6/position = Vector2(0, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeUVFunc_0a7ln")
nodes/fragment/7/position = Vector2(-760, 360)
nodes/fragment/8/node = SubResource("VisualShaderNodeVec2Parameter_xvod8")
nodes/fragment/8/position = Vector2(-1320, 260)
nodes/fragment/9/node = SubResource("VisualShaderNodeVec2Parameter_frex3")
nodes/fragment/9/position = Vector2(-1360, 500)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_75qnw")
nodes/fragment/10/position = Vector2(360, 440)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_jrr2e")
nodes/fragment/11/position = Vector2(-300, 840)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 5, 2, 5, 1, 6, 2, 2, 4, 6, 0, 7, 0, 5, 0, 8, 0, 7, 1, 9, 0, 7, 2, 6, 0, 10, 0, 3, 0, 10, 1, 10, 0, 0, 1, 11, 0, 3, 0)
